{"version":3,"sources":["components/Persons.js","components/Notifications.js","services/people.js","App.js","index.js"],"names":["Person","person","handleDeletePerson","name","number","onClick","id","Persons","persons","map","Notification","message","className","Error","baseUrl","axios","get","then","response","data","newObject","post","put","delete","status","PersonForm","addPerson","newName","handleNameChange","newNumber","handleNumberChange","onSubmit","value","onChange","type","Filter","newFilter","handleFilterChange","App","useState","setPersons","setNewName","setNewNumber","setNewFilter","notificationMessage","setNewNotification","errorMessage","setNewError","useEffect","peopleService","initialPersons","createMessage","text","setTimeout","personsToShow","length","filter","toLowerCase","includes","event","target","preventDefault","newPersonObject","some","e","window","confirm","personToChange","find","p","returnedPerson","catch","error","returnedData","concat","wasRequestSuccessful","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d9dc8832.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Person = ({ person, handleDeletePerson }) => {\r\n  return(\r\n      <li>\r\n        {person.name}\r\n        {' '}\r\n        {person.number}\r\n        {' '}\r\n        <button onClick={handleDeletePerson} id = {person.id} name = {person.name}>\r\n          delete\r\n        </button>\r\n      </li>\r\n  )\r\n}\r\n\r\nconst Persons = ({ persons, handleDeletePerson }) => {\r\n\r\n  return(\r\n      <ul>\r\n      {persons.map(person =>\r\n        <Person\r\n          key={person.name}\r\n          person={person}\r\n          handleDeletePerson={handleDeletePerson}\r\n        />\r\n      )}\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default Persons","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='notification'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Error = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport { Notification, Error }","import axios from 'axios'\r\n// const baseUrl = 'http://localhost:3001/persons'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (newObject) => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst updateNumber = (newObject) => {\r\n    const request = axios.put(`${baseUrl}/${newObject.id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.status === 204)\r\n}\r\n\r\nexport default { getAll, create, updateNumber, remove }","import React, { useState, useEffect } from 'react'\nimport Persons from './components/Persons'\nimport { Notification, Error} from './components/Notifications'\nimport peopleService from './services/people'\n\nconst PersonForm = ({ \n  addPerson, \n  newName, \n  handleNameChange, \n  newNumber, \n  handleNumberChange\n  }) => {\n  return(\n    <form onSubmit={addPerson}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange} />\n        </div>\n        <div>\n          number: <input value={newNumber} onChange={handleNumberChange} />\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n  )\n}\n\nconst Filter = ({ newFilter, handleFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input value={newFilter} onChange={handleFilterChange} />\n    </div>\n  )\n}\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ notificationMessage, setNewNotification ] = useState(null)\n  const [ errorMessage, setNewError ] = useState(null)\n\n  useEffect(() => {\n    peopleService\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }, [])\n\n  const createMessage = ({ text='', type }) => {\n    if (type === 'notification') {\n      setNewNotification(text)\n      setTimeout(() => {\n        setNewNotification(null)\n      }, 5000)\n    } else if (type === 'error') {\n      setNewError(text)\n      setTimeout(() => {\n        setNewError(null)\n      }, 5000)\n    }\n    \n  }\n\n  const addPerson = (event) => {\n    event.preventDefault()\n    const newPersonObject = {\n      name: newName,\n      number: newNumber,\n    }\n\n    if (persons.some(e => e.name.toLowerCase() === newName.toLowerCase())) {\n      const replace = window.confirm(`${newName} is already added to phone book, ` +\n      'replace the old number with a new one?')\n\n      if (replace) {\n        const personToChange = persons.find(p => p.name.toLowerCase() === newName.toLowerCase())\n        personToChange.number = newNumber\n        peopleService\n          .updateNumber(personToChange)\n          .then(returnedPerson => {\n            setPersons(persons.map(person => \n              person.name.toLowerCase() === newName.toLowerCase() ?\n              returnedPerson : person))\n            createMessage({\n              text:`${personToChange.name}'s number has been updated to ${personToChange.number}`,\n              type:'notification'\n            })\n          })\n          .catch(error => {\n            setPersons(persons.filter(person => person.name.toLowerCase() !== newName.toLowerCase()))\n            createMessage(\n              {\n                text:`Information of ${personToChange.name} has already been removed from server`,\n                type:'error'\n              }\n            )\n          })\n      }\n\n    } else {\n      peopleService\n        .create(newPersonObject)\n        .then( returnedData => {\n          setPersons(persons.concat(returnedData))\n          createMessage({\n            text:`Added ${newPersonObject.name}`,\n            type:'notification'\n          })\n        })\n    }\n    setNewName('')\n    setNewNumber('')\n  }\n\n  const deletePerson = (id, name) => {\n    peopleService\n      .remove(id)\n      .then(wasRequestSuccessful => {\n        if (wasRequestSuccessful) {\n          setPersons(persons.filter(person => person.id !== id))\n          createMessage({\n            text:`User ${name} deleted`,\n            type:'notification'\n          })\n        }\n      })\n  }\n\n  const personsToShow = \n    newFilter.length === 0\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  const handleDeletePerson = (event) => {\n    const chooseDelete = window.confirm(`Delete ${event.target.name}?`)\n    if (chooseDelete) {\n      deletePerson(event.target.id, event.target.name)\n    }\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Notification message={notificationMessage} />\n      <Error message={errorMessage} />\n\n      <Filter newFilter={newFilter} handleFilterChange={handleFilterChange}/>\n\n      <h3>Add a new</h3>\n\n      <PersonForm \n        addPerson={addPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons\n        persons={personsToShow}\n        handleDeletePerson={handleDeletePerson}\n      />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}